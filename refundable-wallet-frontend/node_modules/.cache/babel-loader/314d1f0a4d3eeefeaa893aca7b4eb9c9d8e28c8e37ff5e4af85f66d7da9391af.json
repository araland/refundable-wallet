{"ast":null,"code":"var _jsxFileName = \"/home/home/Documents/refundable-wallet-frontend/src/index.tsx\";\nimport { HashRouter } from \"react-router-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport { MetaMaskProvider } from \"@metamask/sdk-react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(MetaMaskProvider, {\n  debug: false,\n  sdkOptions: {\n    logging: {\n      developerMode: true\n    },\n    communicationServerUrl: process.env.REACT_APP_COMM_SERVER_URL,\n    checkInstallationImmediately: false,\n    // This will automatically connect to MetaMask on page load\n    dappMetadata: {\n      name: \"Electron Metamask Connect\",\n      url: window.location.host\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["HashRouter","createRoot","MetaMaskProvider","App","reportWebVitals","jsxDEV","_jsxDEV","root","document","getElementById","render","debug","sdkOptions","logging","developerMode","communicationServerUrl","process","env","REACT_APP_COMM_SERVER_URL","checkInstallationImmediately","dappMetadata","name","url","window","location","host","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/home/Documents/refundable-wallet-frontend/src/index.tsx"],"sourcesContent":["import { HashRouter } from \"react-router-dom\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { MetaMaskProvider } from \"@metamask/sdk-react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = createRoot(document.getElementById(\"root\") as HTMLElement);\nroot.render(\n  <MetaMaskProvider\n    debug={false}\n    sdkOptions={{\n      logging: {\n        developerMode: true,\n      },\n      communicationServerUrl: process.env.REACT_APP_COMM_SERVER_URL,\n      checkInstallationImmediately: false, // This will automatically connect to MetaMask on page load\n      dappMetadata: {\n        name: \"Electron Metamask Connect\",\n        url: window.location.host,\n      },\n    }}\n  >\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </MetaMaskProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGN,UAAU,CAACO,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAgB,CAAC;AACvEF,IAAI,CAACG,MAAM,eACTJ,OAAA,CAACJ,gBAAgB;EACfS,KAAK,EAAE,KAAM;EACbC,UAAU,EAAE;IACVC,OAAO,EAAE;MACPC,aAAa,EAAE;IACjB,CAAC;IACDC,sBAAsB,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;IAC7DC,4BAA4B,EAAE,KAAK;IAAE;IACrCC,YAAY,EAAE;MACZC,IAAI,EAAE,2BAA2B;MACjCC,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAACC;IACvB;EACF,CAAE;EAAAC,QAAA,eAEFpB,OAAA,CAACN,UAAU;IAAA0B,QAAA,eACTpB,OAAA,CAACH,GAAG;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACG,CACpB,CAAC;;AAED;AACA;AACA;AACA1B,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}